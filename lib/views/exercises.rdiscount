#### {% title "Ćwiczenia" %}

# Ćwiczenia

<blockquote>
  {%= image_tag "/images/albert_einstein.jpg", :alt => "[Albert Einstein]" %}
  <p>
   In the interests of clarity, it seemed necessary to constantly
   remind myself to pay not the slightest attention to the elegance of
   the presentation; I adhered conscientiously to the rule of the
   brilliant theoretician, Ludwig Boltzmann, to leave elegance to
   tailors and shoemakers.
  </p>
  <p class="author">— Albert Einstein</p>
</blockquote>

Rozwiązania ćwiczeń należy umieścić na swoim blogu.
Na przykład, rozwiązania ćwiczeń LaTeX-owych, powinny
być dostępne pod jakimś takim URL:

    http://sigma.ug.edu.pl/~wbzyl/2009-11-22-latex.html

(Oczywiście, zamiast *wbzyl* trzeba wstawić swój login,
no i data będzie inna.)

Kod należy umieścić w repozytorium git. Na przykład

    cd ~/tmp
    mkdir latex
    cd latex
    touch README.md
    git init
    ... dodajemy pliki z kodem/rozwiązaniem ...
    git add .
    git commit -m "gotowe"
    cd ..
    git clone --bare latex ~/public_git/latex.git
    rm -rf ~/tmp/latex

## Bash

Zadania do wykonania w laboratoriach:

* {%= link_to "Laboratorium 1", "/labs01" %} (polecenia powłoki)
* {%= link_to "Laboratorium 2", "/labs02" %} (kontynuacja)
* {%= link_to "Laboratorium 3", "/labs03" %} (— " —)
* {%= link_to "Laboratorium 4", "/labs04" %} (— " —)
* {%= link_to "Laboratorium 5", "/labs05" %} (*find*)
* {%= link_to "Laboratorium 6", "/labs06" %} (*grep*)
* {%= link_to "Laboratorium 7", "/labs07" %} (skrypty)
* {%= link_to "Laboratoria 8, 9, 10", "/doc/ex/sp_lab04_zad.odt" %} (skrypty)
* LaTeX, Git: Laboratoria 11, 12, 13
* Zaliczenia: Laboratoria 14, 15


## Edytory

2\. W *jBlogu* jest kilka napisów, które należy wymienić,
na przykład, w pliku *index.html*:

    title: WB_Blog

w pliku *_layouts/default.html*:

    <meta name="author" content="Włodek Bzyl" />
    
Znaleźć wszystkie takie napisy.
Napisać prosty skrypt korzystający z programu *sed*
wymieniający te napisy.

Logo przygotowałem w programie *inkscape*. 
Plik *images/logo.svg* w formacie *SVG* zawiera tekst *WB@jBlog*,
który należy wymienić. 

<blockquote> 
 {%= image_tag "/images/biuletyn-snall.jpg", :alt => "[]" %}
 <p> 
  W okresie międzywojennym font Cyklop był używany 
  w tytulariach gazetowych i drukach akcydensowych.
 </p>
</blockquote>

W pliku *images/logo.svg* literki składane są fontem *OTF*
{%= link_to "Cyklop", "/doc/Cyklop-otf-0_91.zip" %}.
Zainstalować ten font lokalnie i korzystając z programu
*inkscape* zmienić tekst.
Zapisać zmiany i wyeksportować obrazek
*images/logo.png* w formacie *PNG*.

2\. Przygotować prostą stronę www ze ściągą do wyrażeń regularnych
rozpoznawanych przez program *egrep*.
Ściąga powinna być dostępna pod takim URL:

<pre>http://sigma.inf.ug.edu.pl/~TWÓJ_LOGIN/egrep.html
</pre>


## Git

1\. W zespołach 3–4 osobowych przygotować prosty projekt.
Popracować wspólnie nad projektem. Na koniec
zajęć przeanalizować kto co zrobił.

2\. Napisać historyjkę pokazującą jak można
wyszukać *commit* w którym po raz pierwszy
pojawiła się określona funkcja.
Umieścić historyjkę na jBlogu pod *git-grep*. 

3\. Napisać historyjkę ilustrującą użycie polecenia
`git cherry-pick`.
Umieścić historyjkę na jBlogu pod *git-cherry-pick*. 



## XeLaTeX

1\. Zapoznajemy się z programem *TeXworks*:

* wczytujemy gotowy szablon: File → New from Template
* włączamy outlines: Window → Show → Tags
* opanowujemy klika skrótów klawiszowych: 
  * kompilacja: ctrl+t
  * …

2\. Przygotować po jednym dokumencie (1–2 strony wydruku) 
pokazującym podstawowe możliwości pakietu:

* *graphicx* (dokumentacja *epslatex.pdf*)
* *floatlft* albo *photo* (pływające wstawki) 
* *geometry*

3\. Tekst zadań do wykonania w laboratorium, na przykład 
{%= link_to "Laboratorium 2", "/doc/ex/sp_lab02_zad.odt" %},
to lista wypunktowana (otoczenia *enumerate*, *itemize*) 
oraz tytularia (polecenia *section*, *paragraph*).
Przygotować szablon oraz skróty klawiszowe ułatwiające
wpisywanie takich tekstów. Przepisać jeden ze zestawów
zadań korzystając z przygotowanego szablonu oraz ze
skrótów klawiszowych. Opisać to co zostało zrobione
na swoim jBlogu.

Wskazówka do 3. Zajrzyj na strony Wiki:
[Documentation of the code completion feature] [texworks code completion],
[Some tips for using TeXworks] [texworks tips].


## Skrypty powłoki

1\. Poprawić skrypt *makedict.sh* tak, aby rozpoznawał 
polskie litery.


#### Linki

[texworks tips]: http://code.google.com/p/texworks/wiki/TipsAndTricks "Tips and Tricks"
[texworks code completion]: http://code.google.com/p/texworks/wiki/CodeCompletion "Code completion"
